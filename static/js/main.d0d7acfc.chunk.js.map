{"version":3,"sources":["component/NameTag/index.tsx","component/Calendar/index.tsx","component/Bath/index.tsx","index.js"],"names":["NameTag","props","name","Calendar","useState","setPickDate","timePickerProps","date","Date","highlightCurrentDay","reverseMonthAndYearMenus","shortcuts","showActionsBar","showTimeArrowButtons","timePrecision","undefined","useAmPm","className","Classes","ELEVATION_1","onChange","toLocaleDateString","setNewDate","initial_date","start_from","Bath","checkDate","setDate","day_count","Math","round","getTime","person","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAGaA,EAAU,SAACC,GACpB,OACI,cAAC,IAAD,UACKA,EAAMC,Q,wBCFNC,EAAW,SAACF,GACrB,MAAkCG,mBAAS,IAA3C,mBAAmBC,GAAnB,WAUMC,EAAkB,CACpBC,KAAM,IAAIC,KACVC,qBAAqB,EACrBC,0BAA0B,EAC1BC,WAAW,EACXC,gBAAgB,EAChBC,sBAAsB,EACtBC,mBAAeC,EACfC,SAAS,GAGb,OACI,qBAAKC,UAAU,0BAAf,SACI,cAAC,IAAD,aACIA,UAAWC,IAAQC,YACnBC,SAvBU,SAACb,GACfA,IACAF,EAAYE,EAAKc,sBAEjBpB,EAAMqB,WAAWf,MAoBTD,OCrBdiB,G,4BAAe,IAAIf,KAAK,eACxBgB,EAAa,QA+CJC,EArBF,WACT,IAzBkBlB,EAyBlB,EAA6BH,mBAAe,IAAII,MAAhD,mBAAOkB,EAAP,KAAkBC,EAAlB,KAEMC,GA3BYrB,EA2BamB,EAzBxBG,KAAKC,OAAOvB,EAAKwB,UAAYR,EAAaQ,WADjC,QA2BVC,EAAeJ,EAtBT,GAAM,EAEH,QAQA,QAcf,OACI,qBAAKX,UAAU,WAAf,SACI,eAAC,IAAD,CAAMA,UAAU,kCAAhB,UACI,+BAAKO,EAAL,YAA0BD,EAAaF,wBACvC,uCACI,gCAAMO,EAAN,kBACA,cAAC,EAAD,CAAS1B,KAAM8B,OAEnB,uBACA,cAAC,EAAD,CAAUV,WAAYK,U,OC/CtCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0d7acfc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Text } from '@blueprintjs/core'\r\n\r\nexport const NameTag = (props: {name:string}) => {\r\n    return (\r\n        <Text>\r\n            {props.name}\r\n        </Text>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Classes, Text } from '@blueprintjs/core';\r\nimport { DatePicker } from \"@blueprintjs/datetime\"\r\n\r\nexport const Calendar = (props:{setNewDate:any}) => {\r\n    const [pickedDate, setPickDate] = useState(\"\");\r\n\r\n    const onDateChanged = (date:Date) => {\r\n        if (date) {\r\n            setPickDate(date.toLocaleDateString());\r\n\r\n            props.setNewDate(date);\r\n        }\r\n    }\r\n\r\n    const timePickerProps = {\r\n        date: new Date(),\r\n        highlightCurrentDay: true,\r\n        reverseMonthAndYearMenus: false,\r\n        shortcuts: false,\r\n        showActionsBar: false,\r\n        showTimeArrowButtons: false,\r\n        timePrecision: undefined,\r\n        useAmPm: false,\r\n    };\r\n\r\n    return (\r\n        <div className=\"bath-calendar-container\">\r\n            <DatePicker\r\n                className={Classes.ELEVATION_1}\r\n                onChange={onDateChanged}\r\n                {...timePickerProps}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { NameTag } from 'component/NameTag';\r\nimport { Calendar } from 'component/Calendar';\r\nimport { Card } from '@blueprintjs/core';\r\nimport \"./style.css\"\r\n\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\r\n\r\nconst initial_date = new Date(\"2021-11-19\");\r\nconst start_from = \"james\";\r\n\r\nconst countingDays = (date:Date) => {\r\n    const one_day = 1000 * 60 * 60 * 24;\r\n    return Math.round((date.getTime() - initial_date.getTime()) / one_day);\r\n}\r\n\r\nconst whoIs = (days:number) => {\r\n    if ((days % 2) == 0) {\r\n        if (start_from === \"james\") {\r\n            return \"james\";\r\n        }\r\n        else {\r\n            return \"henry\";\r\n        }\r\n    }\r\n    else {\r\n        if (start_from === \"james\") {\r\n            return \"henry\";\r\n        }\r\n        else {\r\n            return \"james\";\r\n        }\r\n    }\r\n}\r\n\r\nconst Bath = () => {\r\n    const [checkDate, setDate] = useState<Date>(new Date());\r\n\r\n    const day_count = countingDays(checkDate);\r\n    const person = whoIs(day_count);\r\n\r\n    return (\r\n        <div className=\"bath-app\">\r\n            <Card className=\"bp3-text-large bp3-running-text\">\r\n                <h3>{start_from} was use {initial_date.toLocaleDateString()}</h3>\r\n                <blockquote>\r\n                    <div>{day_count} days passed</div>\r\n                    <NameTag name={person} />\r\n                </blockquote>\r\n                <br />\r\n                <Calendar setNewDate={setDate}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Bath;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Bath from \"component/Bath\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Bath />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}